definitions:
  api.DeletePostsRequest:
    description: Request payload for deleting multiple posts
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  api.PostRequest:
    description: Request payload for creating or updating a post
    properties:
      content:
        type: string
      scheduled_at:
        type: string
    type: object
  api.TimezoneUpdateRequest:
    description: Request payload for updating timezone
    properties:
      location:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/debug:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Debug LinkedIn authentication
      tags:
      - auth
  /auth/linkedin:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get LinkedIn OAuth URL
      tags:
      - auth
  /auth/status:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get authentication status
      tags:
      - auth
  /posts:
    delete:
      consumes:
      - application/json
      parameters:
      - description: IDs to delete
        in: body
        name: ids
        required: true
        schema:
          $ref: '#/definitions/api.DeletePostsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete multiple posts
      tags:
      - posts
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      parameters:
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/api.PostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new post
      tags:
      - posts
  /posts/{id}:
    delete:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Delete a post
      tags:
      - posts
    get:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/api.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Update a post
      tags:
      - posts
  /posts/{id}/publish:
    post:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Publish a post
      tags:
      - posts
  /posts/due:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get due posts
      tags:
      - posts
  /posts/publish-due:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Publish all due posts
      tags:
      - posts
  /scheduler/status:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get scheduler status
      tags:
      - scheduler
  /timezone:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get current timezone
      tags:
      - timezone
    post:
      consumes:
      - application/json
      parameters:
      - description: Timezone data
        in: body
        name: timezone
        required: true
        schema:
          $ref: '#/definitions/api.TimezoneUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update timezone
      tags:
      - timezone
swagger: "2.0"
